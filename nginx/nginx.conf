
server {
    listen 80;
    server_name atom;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name atom;
    #root /var/www/html;

    ssl_certificate /etc/nginx/ssl/server.pem;
    ssl_certificate_key /etc/nginx/ssl/server.key;

    location / {
        proxy_pass http://homer:8080/;
        proxy_set_header Host $http_host;
    }

    location /grafana/ {
        rewrite ^/grafana/(.*) /$1 break;
        proxy_pass http://grafana:3000/;
        proxy_set_header Host $http_host;
    }

    location /grafana/api/live {
        rewrite ^/grafana/(.*) /$1 break;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $http_host;
        proxy_pass http://grafana:3000/;
    }

    location /prometheus/ {
        proxy_pass http://prometheus:9090/prometheus/;
        proxy_set_header Host $http_host;
    }

    location /nginx_status {
        stub_status;
        #allow 127.0.0.1;	    #only allow requests from localhost
        #deny all;              #deny all other hosts
    }

    location /filebrowser {
        # https://hub.docker.com/r/hurlenko/filebrowser
        # prevents 502 bad gateway error
        proxy_buffers 8 32k;
        proxy_buffer_size 64k;

        client_max_body_size 1G;

        # redirect all HTTP traffic to localhost:8088;
        proxy_pass http://filebrowser:8080;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;

        # enables WS support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_read_timeout 999999999;
    }
}
